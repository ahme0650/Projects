//ahme0650
    Method              ArrayList Runtime       LinkedList Runtime      Explanation

  add(T element)             O(n)                     O(n)              The add method has a time
                                                                       complexity of O(n) because
                                                                        the worst case scenario for
                                                                        both is that we are looping through
                                                                        the data structure n times to add the
                                                                        element to the end of the list.

    getMin()                 O(n)                     O(n)              The getMin() method has a time
                                                                        complexity of O(n) because
                                                                        the worst case scenario for
                                                                        both is that we loop through
                                                                        the data structure n times as we
                                                                        only have to loop through the list
                                                                        n times to find the minimum val.

  removeDuplicates()         O(n^2)                     O(n^2)          The removeDuplicates() method has a time
                                                                        complexity of O(n^2) for LinkedList because
                                                                        we are comparing nodes in a nested while loop.
                                                                        While for ArrayList we are essentialy doing
                                                                        the same thing but we have a helper function in our for loop
                                                                        that is handling checking whether an
                                                                        element exists in a list and that function has
                                                                        a time complexity of o(n) making the function as
                                                                        whole o(n^2)




    reverse()              O(n)                     O(n)               The reverse() method has a time
                                                                        complexity of O(n) because
                                                                        the worst case scenario for
                                                                        both is that we loop through
                                                                        the data structure n times when
                                                                        reversing it in place by swapping values.
